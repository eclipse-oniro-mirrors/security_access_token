# Copyright (c) 2021-2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("../../../../access_token.gni")

ohos_unittest("libnativetoken_test") {
  subsystem_name = "security"
  part_name = "access_token"
  module_out_path = part_name + "/" + part_name
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
  }
  branch_protector_ret = "pac_ret"

  include_dirs = [ "../include" ]

  sources = [
    "unittest/src/nativetoken_kit_test.cpp",
    "unittest/src/nativetoken_oper_test.cpp",
  ]

  configs = [ "${access_token_path}/config:coverage_flags" ]

  deps = [
    "../:libnativetoken_shared",
    "//third_party/googletest:gmock",
    "//third_party/googletest:gtest",
  ]
  external_deps = [
    "bounds_checking_function:libsec_shared",
    "cJSON:cjson_static",
  ]
}

ohos_unittest("libnativetoken_mock_test") {
  subsystem_name = "security"
  part_name = "access_token"
  module_out_path = part_name + "/" + part_name
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
  }
  branch_protector_ret = "pac_ret"

  include_dirs = [
    "../include",
    "mock/include/",
  ]

  sources = [
    "../src/nativetoken.c",
    "../src/nativetoken_json_oper.c",
    "../src/nativetoken_klog.c",
    "mock/src/cJSON.c",
    "unittest/mock/nativetoken_oper_test.cpp",
  ]

  configs = [ "${access_token_path}/config:coverage_flags" ]

  deps = [
    "//third_party/googletest:gmock",
    "//third_party/googletest:gtest",
  ]
  external_deps = [
    "bounds_checking_function:libsec_shared",
    "hilog:libhilog",
  ]
}

group("unittest") {
  testonly = true
  deps = [
    ":libnativetoken_mock_test",
    ":libnativetoken_test",
  ]
}
