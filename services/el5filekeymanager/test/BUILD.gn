# Copyright (c) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("../../../access_token.gni")

if (is_standard_system && ability_base_enable == true) {
  ohos_unittest("el5_filekey_manager_service_unittest") {
    subsystem_name = "security"
    part_name = "access_token"
    module_out_path = part_name + "/" + part_name
    sanitize = {
      cfi = true
      cfi_cross_dso = true
      debug = false
    }
    branch_protector_ret = "pac_ret"

    include_dirs = [
      "../include",
      "include",
      "${access_token_path}/services/el5filekeymanager/include",
      "${access_token_path}/frameworks/el5filekeymanager/include/",
    ]

    sources = [
      "../src/el5_filekey_manager_service.cpp",
      "../src/el5_filekey_manager_service_ability.cpp",
      "../src/el5_filekey_manager_stub.cpp",
      "src/el5_filekey_manager_service_unittest.cpp",
    ]

    configs = [ "${access_token_path}/config:coverage_flags" ]

    deps = [
      "${access_token_path}/interfaces/innerkits/accesstoken:libaccesstoken_sdk",
      "${access_token_path}/interfaces/innerkits/accesstoken:libtokenid_sdk",
      "${access_token_path}/interfaces/innerkits/el5filekeymanager:el5_filekey_manager_sdk",
      "${access_token_path}/interfaces/innerkits/token_setproc:libtoken_setproc",
      "//third_party/googletest:gtest_main",
    ]

    external_deps = [
      "ability_base:want",
      "c_utils:utils",
      "hilog:libhilog",
      "ipc:ipc_single",
      "safwk:system_ability_fwk",
      "samgr:samgr_proxy",
    ]

    cflags_cc = [
      "-DHILOG_ENABLE",
      "-DDEBUG_API_PERFORMANCE",
    ]

    if (common_event_service_enable) {
      cflags_cc += [ "-DCOMMON_EVENT_SERVICE_ENABLE" ]
      external_deps += [ "common_event_service:cesfwk_innerkits" ]
      sources += [ "../src/el5_filekey_manager_subscriber.cpp" ]
    }

    if (eventhandler_enable == true) {
      cflags_cc += [ "-DEVENTHANDLER_ENABLE" ]
      external_deps += [ "eventhandler:libeventhandler" ]
    }

    if (theme_screenlock_mgr_enable) {
      cflags_cc += [ "-DTHEME_SCREENLOCK_MGR_ENABLE" ]
      external_deps += [ "screenlock_mgr:screenlock_client" ]
    }
  }

  ohos_unittest("el5_filekey_manager_stub_unittest") {
    subsystem_name = "security"
    part_name = "access_token"
    module_out_path = part_name + "/" + part_name
    sanitize = {
      cfi = true
      cfi_cross_dso = true
      debug = false
    }
    branch_protector_ret = "pac_ret"

    include_dirs = [
      "../include",
      "include",
      "${access_token_path}/services/el5filekeymanager/include",
      "${access_token_path}/frameworks/el5filekeymanager/include/",
    ]

    sources = [
      "../src/el5_filekey_manager_service.cpp",
      "../src/el5_filekey_manager_service_ability.cpp",
      "../src/el5_filekey_manager_stub.cpp",
      "src/el5_filekey_manager_stub_unittest.cpp",
    ]

    configs = [ "${access_token_path}/config:coverage_flags" ]

    deps = [
      "${access_token_path}/interfaces/innerkits/accesstoken:libaccesstoken_sdk",
      "${access_token_path}/interfaces/innerkits/accesstoken:libtokenid_sdk",
      "${access_token_path}/interfaces/innerkits/el5filekeymanager:el5_filekey_manager_sdk",
      "${access_token_path}/interfaces/innerkits/token_setproc:libtoken_setproc",
      "//third_party/googletest:gtest_main",
    ]

    external_deps = [
      "ability_base:want",
      "c_utils:utils",
      "hilog:libhilog",
      "ipc:ipc_single",
      "safwk:system_ability_fwk",
      "samgr:samgr_proxy",
    ]

    cflags_cc = [
      "-DHILOG_ENABLE",
      "-DDEBUG_API_PERFORMANCE",
    ]

    if (common_event_service_enable) {
      cflags_cc += [ "-DCOMMON_EVENT_SERVICE_ENABLE" ]
      external_deps += [ "common_event_service:cesfwk_innerkits" ]
      sources += [ "../src/el5_filekey_manager_subscriber.cpp" ]
    }

    if (eventhandler_enable == true) {
      cflags_cc += [ "-DEVENTHANDLER_ENABLE" ]
      external_deps += [ "eventhandler:libeventhandler" ]
    }

    if (theme_screenlock_mgr_enable) {
      cflags_cc += [ "-DTHEME_SCREENLOCK_MGR_ENABLE" ]
      external_deps += [ "screenlock_mgr:screenlock_client" ]
    }
  }

  group("unittest") {
    testonly = true
    deps = [
      ":el5_filekey_manager_service_unittest",
      ":el5_filekey_manager_stub_unittest",
    ]
  }
}
