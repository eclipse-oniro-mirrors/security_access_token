# Copyright (c) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("../../../../access_token.gni")

ohos_unittest("libwindow_manager_test") {
  subsystem_name = "security"
  part_name = "access_token"
  module_out_path = part_name + "/" + part_name
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
  }
  branch_protector_ret = "pac_ret"
  include_dirs = [
    "${access_token_path}/frameworks/common/include",
    "${access_token_path}/frameworks/privacy/include",
    "${access_token_path}/interfaces/innerkits/accesstoken/include",
    "${access_token_path}/interfaces/inner_api/privacy/include",
    "${access_token_path}/services/common/window_manager/include",
  ]

  sources = [
    "${access_token_path}/services/common/window_manager/src/privacy_mock_session_manager_proxy.cpp",
    "${access_token_path}/services/common/window_manager/src/privacy_scene_session_manager_lite_proxy.cpp",
    "${access_token_path}/services/common/window_manager/src/privacy_scene_session_manager_proxy.cpp",
    "${access_token_path}/services/common/window_manager/src/privacy_session_manager_proxy.cpp",
    "${access_token_path}/services/common/window_manager/src/privacy_window_manager_agent.cpp",
    "${access_token_path}/services/common/window_manager/src/privacy_window_manager_client.cpp",
    "${access_token_path}/services/common/window_manager/src/privacy_window_manager_death_recipient.cpp",
    "${access_token_path}/services/common/window_manager/src/privacy_window_manager_proxy.cpp",
    "${access_token_path}/services/common/window_manager/src/window_manager_loader.cpp",
    "unittest/window_manager_test.cpp",
  ]

  cflags_cc = [ "-DHILOG_ENABLE" ]
  configs = [ "${access_token_path}/config:coverage_flags" ]

  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "ipc:ipc_core",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
    "window_manager:libwsutils",
  ]
}

group("unittest") {
  testonly = true
  deps = [ ":libwindow_manager_test" ]
}
