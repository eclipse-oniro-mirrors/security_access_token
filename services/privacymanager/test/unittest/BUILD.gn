# Copyright (c) 2022-2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("../../../../access_token.gni")

if (is_standard_system && ability_base_enable == true) {
  ohos_unittest("libprivacy_manager_service_standard_test") {
    subsystem_name = "security"
    part_name = "access_token"
    module_out_path = part_name + "/" + part_name
    sanitize = {
      cfi = true
      cfi_cross_dso = true
      debug = false
    }
    branch_protector_ret = "pac_ret"

    include_dirs = [
      "${access_token_path}/frameworks/common/include",
      "${access_token_path}/frameworks/privacy/include",
      "${access_token_path}/interfaces/innerkits/accesstoken/include",
      "${access_token_path}/interfaces/innerkits/privacy/include",
      "${access_token_path}/interfaces/innerkits/privacy/src",
      "${access_token_path}/services/common/ability_manager/include",
      "${access_token_path}/services/common/app_manager/include",
      "${access_token_path}/services/common/database/include",
      "${access_token_path}/services/privacymanager/include/active",
      "${access_token_path}/services/privacymanager/include/common",
      "${access_token_path}/services/privacymanager/include/database",
      "${access_token_path}/services/privacymanager/include/record",
      "${access_token_path}/services/privacymanager/include/service",
      "${access_token_path}/services/privacymanager/include/sensitive/ability_manager",
      "${access_token_path}/services/privacymanager/include/sensitive/app_manager",
      "${access_token_path}/services/privacymanager/include/sensitive/audio_manager",
      "${access_token_path}/services/privacymanager/include/sensitive/camera_manager",
      "${access_token_path}/services/privacymanager/include/sensitive/lockscreen_manager",
      "//third_party/googletest/include",
      "//third_party/sqlite/include",
    ]

    sources = [
      "../../src/active/active_status_callback_manager.cpp",
      "../../src/active/perm_active_status_callback_death_recipient.cpp",
      "../../src/active/perm_active_status_change_callback_proxy.cpp",
      "../../src/active/state_change_callback_proxy.cpp",
      "../../src/common/constant.cpp",
      "../../src/common/time_util.cpp",
      "../../src/database/data_translator.cpp",
      "../../src/database/permission_used_record_db.cpp",
      "../../src/database/privacy_field_const.cpp",
      "../../src/record/on_permission_used_record_callback_proxy.cpp",
      "../../src/record/permission_record.cpp",
      "../../src/record/permission_record_manager.cpp",
      "../../src/record/permission_record_repository.cpp",
      "../../src/record/permission_used_record_cache.cpp",
      "../../src/sensitive/audio_manager/audio_global_switch_change_stub.cpp",
      "../../src/sensitive/audio_manager/audio_manager_privacy_client.cpp",
      "../../src/sensitive/audio_manager/audio_manager_privacy_death_recipient.cpp",
      "../../src/sensitive/audio_manager/audio_manager_privacy_proxy.cpp",
      "../../src/sensitive/camera_manager/camera_manager_privacy_client.cpp",
      "../../src/sensitive/camera_manager/camera_manager_privacy_death_recipient.cpp",
      "../../src/sensitive/camera_manager/camera_manager_privacy_proxy.cpp",
      "../../src/sensitive/camera_manager/camera_service_callback_stub.cpp",
      "../../src/service/privacy_manager_service.cpp",
      "../../src/service/privacy_manager_stub.cpp",
      "permission_record_db_test.cpp",
      "permission_record_manager_test.cpp",
      "privacy_manager_service_test.cpp",
      "sensitive_manager_test.cpp",
    ]

    cflags_cc = []

    configs = [ "${access_token_path}/config:coverage_flags" ]

    deps = [
      "${access_token_path}/frameworks/common:accesstoken_common_cxx",
      "${access_token_path}/frameworks/privacy:privacy_communication_adapter_cxx",
      "${access_token_path}/interfaces/innerkits/accesstoken:libaccesstoken_sdk",
      "${access_token_path}/interfaces/innerkits/accesstoken:libtokenid_sdk",
      "${access_token_path}/interfaces/innerkits/privacy:libprivacy_sdk",
      "${access_token_path}/interfaces/innerkits/token_setproc:libtoken_setproc",
      "${access_token_path}/services/common:accesstoken_service_common",
      "${access_token_path}/services/privacymanager:privacy_manager_service",
      "//third_party/googletest:gtest_main",
    ]

    external_deps = [
      "ability_base:want",
      "access_token:libaccesstoken_sdk",
      "audio_framework:audio_client",
      "c_utils:utils",
      "hilog:libhilog",
      "hisysevent:libhisysevent",
      "ipc:ipc_core",
      "safwk:system_ability_fwk",
      "samgr:samgr_proxy",
    ]
    if (common_event_service_enable) {
      cflags_cc += [ "-DCOMMON_EVENT_SERVICE_ENABLE" ]
      external_deps += [ "common_event_service:cesfwk_innerkits" ]
      sources += [
        "../../src/sensitive/lockscreen_manager/lockscreen_status_observer.cpp",
      ]
    }
    if (theme_screenlock_mgr_enable) {
      cflags_cc += [ "-DTHEME_SCREENLOCK_MGR_ENABLE" ]
      external_deps += [ "screenlock_mgr:screenlock_client" ]
    }

    if (audio_framework_enable) {
      cflags_cc += [
        "-DHILOG_ENABLE",
        "-DFEATURE_DTMF_TONE",
      ]
      include_dirs +=
          [ "${audio_framework_path}/services/audio_policy/common/include" ]
    }

    if (camera_framework_enable) {
      cflags_cc += [ "-DCAMERA_FRAMEWORK_ENABLE" ]
      external_deps += [ "camera_framework:camera_framework" ]
    }

    if (ability_runtime_enable) {
      cflags_cc += [ "-DABILITY_RUNTIME_ENABLE" ]
      external_deps += [
        "ability_runtime:ability_manager",
        "ability_runtime:app_manager",
      ]
    }

    if (access_token_camera_float_window_enable) {
      cflags_cc += [ "-DCAMERA_FLOAT_WINDOW_ENABLE" ]
      include_dirs += [ "${access_token_path}/services/privacymanager/include/sensitive/window_manager" ]
      sources += [
        "${access_token_path}/services/privacymanager/src/sensitive/window_manager/window_manager_privacy_agent.cpp",
        "${access_token_path}/services/privacymanager/src/sensitive/window_manager/window_manager_privacy_client.cpp",
        "${access_token_path}/services/privacymanager/src/sensitive/window_manager/window_manager_privacy_death_recipient.cpp",
        "${access_token_path}/services/privacymanager/src/sensitive/window_manager/window_manager_privacy_proxy.cpp",
      ]
    }
  }
}

group("unittest") {
  testonly = true
  deps = [ ":libprivacy_manager_service_standard_test" ]
}
