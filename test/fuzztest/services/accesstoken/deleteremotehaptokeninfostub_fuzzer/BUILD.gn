# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/config/features.gni")
import("//build/test.gni")
import("../../../../../access_token.gni")

ohos_fuzztest("DeleteRemoteHapTokenInfoStubFuzzTest") {
  module_out_path = module_output_path
  fuzz_config_file = "."

  sources = [ "deleteremotehaptokeninfostub_fuzzer.cpp" ]

  cflags = [
    "-g",
    "-O0",
    "-Wno-unused-variable",
    "-fno-omit-frame-pointer",
  ]

  configs = [ "${access_token_path}/config:coverage_flags" ]

  include_dirs = [
    "${access_token_path}/services/tokensyncmanager/include/service",
    "${access_token_path}/services/tokensyncmanager/include/remote",
    "${access_token_path}/services/tokensyncmanager/include/command",
    "${access_token_path}/services/tokensyncmanager/include/common",
    "${access_token_path}/services/tokensyncmanager/include/device",
    "${access_token_path}/services/tokensyncmanager/include/protocol",
    "${access_token_path}/frameworks/common/include",
    "${access_token_path}/frameworks/accesstoken/include",
    "${access_token_path}/frameworks/tokensync/include",
    "${access_token_path}/interfaces/innerkits/accesstoken/include",
  ]

  sources += [
    "${access_token_path}/services/tokensyncmanager/src/command/base_remote_command.cpp",
    "${access_token_path}/services/tokensyncmanager/src/command/delete_remote_token_command.cpp",
    "${access_token_path}/services/tokensyncmanager/src/command/sync_remote_hap_token_command.cpp",
    "${access_token_path}/services/tokensyncmanager/src/command/sync_remote_native_token_command.cpp",
    "${access_token_path}/services/tokensyncmanager/src/command/update_remote_hap_token_command.cpp",
    "${access_token_path}/services/tokensyncmanager/src/common/constant.cpp",
    "${access_token_path}/services/tokensyncmanager/src/device/device_info_manager.cpp",
    "${access_token_path}/services/tokensyncmanager/src/device/device_info_repository.cpp",
    "${access_token_path}/services/tokensyncmanager/src/remote/remote_command_executor.cpp",
    "${access_token_path}/services/tokensyncmanager/src/remote/remote_command_factory.cpp",
    "${access_token_path}/services/tokensyncmanager/src/remote/remote_command_manager.cpp",
    "${access_token_path}/services/tokensyncmanager/src/remote/soft_bus_channel.cpp",
    "${access_token_path}/services/tokensyncmanager/src/remote/soft_bus_device_connection_listener.cpp",
    "${access_token_path}/services/tokensyncmanager/src/remote/soft_bus_manager.cpp",
    "${access_token_path}/services/tokensyncmanager/src/remote/soft_bus_session_listener.cpp",
    "${access_token_path}/services/tokensyncmanager/src/service/token_sync_event_handler.cpp",
    "${access_token_path}/services/tokensyncmanager/src/service/token_sync_manager_service.cpp",
    "${access_token_path}/services/tokensyncmanager/src/service/token_sync_manager_stub.cpp",
  ]

  cflags_cc = [
    "-DHILOG_ENABLE",
    "-DDEBUG_API_PERFORMANCE",
  ]

  deps = [
    "${access_token_path}/frameworks/accesstoken:accesstoken_communication_adapter_cxx",
    "${access_token_path}/frameworks/common:accesstoken_common_cxx",
    "${access_token_path}/interfaces/innerkits/accesstoken:libaccesstoken_sdk",
    "//third_party/zlib:shared_libz",
  ]

  external_deps = [
    "c_utils:utils",
    "dsoftbus:softbus_client",
    "eventhandler:libeventhandler",
    "hilog:libhilog",
    "ipc:ipc_core",
    "safwk:system_ability_fwk",
  ]

  if (token_sync_enable == true) {
    cflags_cc += [ "-DTOKEN_SYNC_ENABLE" ]
    external_deps += [ "device_manager:devicemanagersdk" ]
  }
}
