# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
import("../../../access_token.gni")
group("fuzztest") {
  testonly = true

  deps = [
    # deps file
    "allochaptokenstub_fuzzer:AllocHapTokenStubFuzzTest",
    "alloclocaltokenidstub_fuzzer:AllocLocalTokenIDStubFuzzTest",
    "checknativedcapstub_fuzzer:CheckNativeDCapStubFuzzTest",
    "clearusergrantedpermissionstatestub_fuzzer:ClearUserGrantedPermissionStateStubFuzzTest",
    "deleteremotedevicetokensstub_fuzzer:DeleteRemoteDeviceTokensStubFuzzTest",
    "deleteremotetokenstub_fuzzer:DeleteRemoteTokenStubFuzzTest",
    "deletetokenstub_fuzzer:DeleteTokenStubFuzzTest",
    "dumptokeninfostub_fuzzer:DumpTokenInfoStubFuzzTest",
    "getallnativetokeninfostub_fuzzer:GetAllNativeTokenInfoStubFuzzTest",
    "getdefpermissionsstub_fuzzer:GetDefPermissionsStubFuzzTest",
    "getdefpermissionstub_fuzzer:GetDefPermissionStubFuzzTest",
    "gethaptokenidstub_fuzzer:GetHapTokenIDStubFuzzTest",
    "gethaptokeninfofromremotestub_fuzzer:GetHapTokenInfoFromRemoteStubFuzzTest",
    "gethaptokeninfostub_fuzzer:GetHapTokenInfoStubFuzzTest",
    "getnativetokenidstub_fuzzer:GetNativeTokenIdStubFuzzTest",
    "getnativetokeninfostub_fuzzer:GetNativeTokenInfoStubFuzzTest",
    "getpermissionflagstub_fuzzer:GetPermissionFlagStubFuzzTest",
    "getremotenativetokenidstub_fuzzer:GetRemoteNativeTokenIDStubFuzzTest",
    "getreqpermissionsstub_fuzzer:GetReqPermissionsStubFuzzTest",
    "getselfpermissionsstatestub_fuzzer:GetSelfPermissionsStateStubFuzzTest",
    "gettokentypestub_fuzzer:GetTokenTypeStubFuzzTest",
    "grantpermissionstub_fuzzer:GrantPermissionStubFuzzTest",
    "registerpermstatechangecallbackstub_fuzzer:RegisterPermStateChangeCallbackStubFuzzTest",
    "reloadnativetokeninfostub_fuzzer:ReloadNativeTokenInfoStubFuzzTest",
    "revokepermissionstub_fuzzer:RevokePermissionStubFuzzTest",
    "setremotehaptokeninfostub_fuzzer:SetRemoteHapTokenInfoStubFuzzTest",
    "setremotenativetokeninfostub_fuzzer:SetRemoteNativeTokenInfoStubFuzzTest",
    "unregisterpermstatechangecallbackstub_fuzzer:UnRegisterPermStateChangeCallbackStubFuzzTest",
    "updatehaptokenstub_fuzzer:UpdateHapTokenStubFuzzTest",
    "verifyaccesstokenstub_fuzzer:VerifyAccessTokenStubFuzzTest",
  ]

  if (is_standard_system && ability_base_enable == true) {
    deps += [
      "addpermissionusedrecordstub_fuzzer:AddPermissionUsedRecordStubFuzzTest",
      "getpermissionusedrecordsasyncstub_fuzzer:GetPermissionUsedRecordsAsyncStubFuzzTest",
      "getpermissionusedrecordsstub_fuzzer:GetPermissionUsedRecordsStubFuzzTest",
      "isallowedusingpermissionstub_fuzzer:IsAllowedUsingPermissionStubFuzzTest",
      "registerpermactivestatuscallbackstub_fuzzer:RegisterPermActiveStatusCallbackStubFuzzTest",
      "removepermissionusedrecordsstub_fuzzer:RemovePermissionUsedRecordsStubFuzzTest",
      "startusingpermissioncallbackstub_fuzzer:StartUsingPermissionCallbackStubFuzzTest",
      "startusingpermissionstub_fuzzer:StartUsingPermissionStubFuzzTest",
      "stopusingpermissionstub_fuzzer:StopUsingPermissionStubFuzzTest",
      "unregisterpermactivestatuscallbackstub_fuzzer:UnRegisterPermActiveStatusCallbackStubFuzzTest",
    ]
  }
}
