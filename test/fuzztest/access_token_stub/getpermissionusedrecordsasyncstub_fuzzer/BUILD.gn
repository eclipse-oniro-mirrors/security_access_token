# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/config/features.gni")
import("//build/test.gni")
import("../../../../access_token.gni")

module_output_path = "access_token/access_token_stub"

ohos_fuzztest("GetPermissionUsedRecordsAsyncStubFuzzTest") {
  module_out_path = module_output_path
  fuzz_config_file = "."

  sources = [ "getpermissionusedrecordsasyncstub_fuzzer.cpp" ]

  cflags = [
    "-g",
    "-O0",
    "-Wno-unused-variable",
    "-fno-omit-frame-pointer",
  ]

  configs = [ "${access_token_path}/config:coverage_flags" ]

  include_dirs = [
    "${access_token_path}/frameworks/privacy/include",
    "${access_token_path}/frameworks/common/include",
    "${access_token_path}/interfaces/innerkits/accesstoken/include",
    "${access_token_path}/interfaces/innerkits/privacy/include",
    "${access_token_path}/interfaces/innerkits/privacy/src",
    "${access_token_path}/services/privacymanager/include/active",
    "${access_token_path}/services/privacymanager/include/common",
    "${access_token_path}/services/privacymanager/include/database",
    "${access_token_path}/services/privacymanager/include/record",
    "${access_token_path}/services/privacymanager/include/service",
    "${access_token_path}/services/privacymanager/include/sensitive",
    "${access_token_path}/services/privacymanager/include/sensitive/ability_manager/",
    "${access_token_path}/services/privacymanager/include/sensitive/app_manager/",
    "${access_token_path}/services/privacymanager/include/sensitive/audio_manager/",
    "${access_token_path}/services/privacymanager/include/sensitive/camera_manager/",
    "${access_token_path}/services/privacymanager/include/sensitive/window_manager/",
    "${access_token_path}/services/common/database/include",
    "//third_party/sqlite/include/",
  ]

  sources += [
    "${access_token_path}/services/privacymanager/src/active/active_status_callback_manager.cpp",
    "${access_token_path}/services/privacymanager/src/active/perm_active_status_callback_death_recipient.cpp",
    "${access_token_path}/services/privacymanager/src/active/perm_active_status_change_callback_proxy.cpp",
    "${access_token_path}/services/privacymanager/src/active/state_change_callback_proxy.cpp",
    "${access_token_path}/services/privacymanager/src/common/constant.cpp",
    "${access_token_path}/services/privacymanager/src/common/memory_guard.cpp",
    "${access_token_path}/services/privacymanager/src/common/privacy_field_const.cpp",
    "${access_token_path}/services/privacymanager/src/common/time_util.cpp",
    "${access_token_path}/services/privacymanager/src/database/data_translator.cpp",
    "${access_token_path}/services/privacymanager/src/database/permission_used_record_db.cpp",
    "${access_token_path}/services/privacymanager/src/record/on_permission_used_record_callback_proxy.cpp",
    "${access_token_path}/services/privacymanager/src/record/permission_record.cpp",
    "${access_token_path}/services/privacymanager/src/record/permission_record_manager.cpp",
    "${access_token_path}/services/privacymanager/src/record/permission_record_repository.cpp",
    "${access_token_path}/services/privacymanager/src/record/permission_used_record_cache.cpp",
    "${access_token_path}/services/privacymanager/src/sensitive/ability_manager/ability_manager_privacy_client.cpp",
    "${access_token_path}/services/privacymanager/src/sensitive/ability_manager/ability_manager_privacy_death_recipient.cpp",
    "${access_token_path}/services/privacymanager/src/sensitive/ability_manager/ability_manager_privacy_proxy.cpp",
    "${access_token_path}/services/privacymanager/src/sensitive/app_manager/app_manager_death_recipient.cpp",
    "${access_token_path}/services/privacymanager/src/sensitive/app_manager/app_manager_privacy_client.cpp",
    "${access_token_path}/services/privacymanager/src/sensitive/app_manager/app_manager_privacy_proxy.cpp",
    "${access_token_path}/services/privacymanager/src/sensitive/app_manager/app_state_data.cpp",
    "${access_token_path}/services/privacymanager/src/sensitive/app_manager/app_status_change_callback.cpp",
    "${access_token_path}/services/privacymanager/src/sensitive/app_manager/process_data.cpp",
    "${access_token_path}/services/privacymanager/src/sensitive/audio_manager/audio_global_switch_change_stub.cpp",
    "${access_token_path}/services/privacymanager/src/sensitive/audio_manager/audio_manager_privacy_client.cpp",
    "${access_token_path}/services/privacymanager/src/sensitive/audio_manager/audio_manager_privacy_death_recipient.cpp",
    "${access_token_path}/services/privacymanager/src/sensitive/audio_manager/audio_manager_privacy_proxy.cpp",
    "${access_token_path}/services/privacymanager/src/sensitive/camera_manager/camera_manager_privacy_client.cpp",
    "${access_token_path}/services/privacymanager/src/sensitive/camera_manager/camera_manager_privacy_death_recipient.cpp",
    "${access_token_path}/services/privacymanager/src/sensitive/camera_manager/camera_manager_privacy_proxy.cpp",
    "${access_token_path}/services/privacymanager/src/sensitive/camera_manager/camera_service_callback_stub.cpp",
    "${access_token_path}/services/privacymanager/src/sensitive/window_manager/window_manager_privacy_agent.cpp",
    "${access_token_path}/services/privacymanager/src/sensitive/window_manager/window_manager_privacy_client.cpp",
    "${access_token_path}/services/privacymanager/src/sensitive/window_manager/window_manager_privacy_death_recipient.cpp",
    "${access_token_path}/services/privacymanager/src/sensitive/window_manager/window_manager_privacy_proxy.cpp",
    "${access_token_path}/services/privacymanager/src/service/privacy_manager_service.cpp",
    "${access_token_path}/services/privacymanager/src/service/privacy_manager_stub.cpp",
  ]

  if (use_musl) {
    if (use_jemalloc && use_jemalloc_dfx_intf) {
      defines = [ "CONFIG_USE_JEMALLOC_DFX_INTF" ]
    }
  }
  cflags_cc = [ "-DHILOG_ENABLE" ]

  deps = [
    "${access_token_path}/frameworks/common:accesstoken_common_cxx",
    "${access_token_path}/frameworks/privacy:privacy_communication_adapter_cxx",
    "${access_token_path}/interfaces/innerkits/accesstoken:libaccesstoken_sdk",
    "${access_token_path}/interfaces/innerkits/accesstoken:libtokenid_sdk",
    "${access_token_path}/interfaces/innerkits/privacy:libprivacy_sdk",
    "${access_token_path}/services/common/database:accesstoken_database_cxx",
  ]

  external_deps = [
    "ability_base:want",
    "audio_framework:audio_client",
    "c_utils:utils",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
    "ipc:ipc_core",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
  ]
}
